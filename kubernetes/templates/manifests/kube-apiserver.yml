apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers :
  - name: kube-apiserver
    image: {{ kubernetes_apiserver_image }}
    command:
      - kube-apiserver
      - --v=0
      - --logtostderr=true
      - --allow-privileged=true
      - --bind-address=0.0.0.0
      - --secure-port=5443
      - --insecure-port=0
      - --advertise-address={{ kubernetes_apiserver_vip }}
      - --service-cluster-ip-range={{ kubernetes_cluster_ip_rang }}
      - --service-node-port-range=30000-32767
      - --etcd-servers={% for h in play_hosts %}https://{{ h }}:2379{% if not loop.last %},{% endif %}{% endfor%} 
      - --etcd-cafile={{ kubernetes_etcd_ssl_path }}/etcd-ca.pem
      - --etcd-certfile={{ kubernetes_etcd_ssl_path }}/etcd.pem
      - --etcd-keyfile={{ kubernetes_etcd_ssl_path }}/etcd-key.pem
      - --client-ca-file={{ kubernetes_pki_path }}/ca.pem
      - --tls-cert-file={{ kubernetes_pki_path }}/apiserver.pem
      - --tls-private-key-file={{ kubernetes_pki_path }}/apiserver-key.pem
      - --kubelet-client-certificate={{ kubernetes_pki_path }}/apiserver.pem
      - --kubelet-client-key={{ kubernetes_pki_path }}/apiserver-key.pem
      - --service-account-key-file={{ kubernetes_pki_path }}/sa.pub
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --admission-control=Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota
      - --authorization-mode=Node,RBAC
      - --enable-bootstrap-token-auth=true
      - --requestheader-client-ca-file={{ kubernetes_pki_path }}/front-proxy-ca.pem
      - --proxy-client-cert-file={{ kubernetes_pki_path }}/front-proxy-client.pem
      - --proxy-client-key-file={{ kubernetes_pki_path }}/front-proxy-client-key.pem
      - --requestheader-allowed-names=aggregator
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-username-headers=X-Remote-User
      - --audit-log-maxage=30
      - --audit-log-maxbackup=3
      - --audit-log-maxsize=100
      - --audit-log-path={{ kubernetes_log_path }}/audit.log
      - --audit-policy-file={{ kubernetes_conf_path }}/audit-policy.yml
      - --experimental-encryption-provider-config={{ kubernetes_conf_path }}/encryption.yml
      - --event-ttl=1h
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: {{ kubernetes_apiserver_port }}
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 250m
    volumeMounts:
    - mountPath: /var/log/kubernetes
      name: k8s-audit-log
    - mountPath: /etc/kubernetes/pki
      name: k8s-certs
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ca-certs
      readOnly: true
    - mountPath: /etc/kubernetes/encryption.yml
      name: encryption-config
      readOnly: true
    - mountPath: /etc/kubernetes/audit-policy.yml
      name: audit-config
      readOnly: true
    - mountPath: /etc/etcd/ssl
      name: etcd-ca-certs
      readOnly: true
  volumes:
  - hostPath:
      path: {{ kubernetes_log_path }}
      type: DirectoryOrCreate
    name: k8s-audit-log
  - hostPath:
      path: {{ kubernetes_pki_path }}
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: {{ kubernetes_conf_path }}/encryption.yml
      type: FileOrCreate
    name: encryption-config
  - hostPath:
      path: {{ kubernetes_conf_path }}/audit-policy.yml
      type: FileOrCreate
    name: audit-config
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: {{ kubernetes_etcd_ssl_path }}
      type: DirectoryOrCreate
    name: etcd-ca-certs
